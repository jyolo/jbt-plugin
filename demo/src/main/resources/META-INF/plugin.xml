<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>ai-jbt</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <name>Demo</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="weicong@outlook.com" url="https://plugin.yy8.com">plugin.yy8.com</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
    plugin.yy8.com.<br>
    <em>most HTML tags may be used</em>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
<!--        <toolWindow id="千流AI" anchor="right" canCloseContents="true" icon="/icons/toolWindow.svg"-->
<!--                    factoryClass="com.qianliuAiUi.AiReviewWindowFactory" />-->

        <notificationGroup id="webViewNotifications" displayType="BALLOON" toolWindowId="千流AI" />

        <applicationConfigurable instance="settings.QianLiuPanel" id="Qianliu-AI" parentId="tools" displayName="千流AI - 你的AI编程助手">
            <configurable instance="settings.GPT3_35_TurboPanel" id="com.obiscr.chatgpt.settings.GPT3-3.5-Turbo" displayName="千流AI"/>
<!--            <configurable instance="com.obiscr.tabnine.userSettings.ApplicationConfigurable" id="com.obiscr.tabnine.userSettings.ApplicationConfigurable" displayName="智能代码补全"/>-->
            <configurable instance="settings.SettingsPanel" id="com.qianliuAiUi.settings.SettingsPanel" displayName="千流AI代码Review" />
        </applicationConfigurable>
        <applicationService serviceImplementation="settings.OpenAISettingsState"/>
        <applicationService serviceImplementation="com.common.RequestHeaders"/>
        <applicationService serviceImplementation="settings.AiReviewSettingsState"/>
        <fileDocumentManagerListener implementation="ideActions.SaveDocumentListener"/>

<!--        <projectService serviceImplementation="com.obiscr.chatgpt.core.ConversationManager"/>-->
<!--        <projectService serviceImplementation="com.obiscr.chatgpt.core.SendAction"/>-->
<!--        <projectService serviceImplementation="com.obiscr.chatgpt.ChatGPTHandler"/>-->
        <projectService serviceImplementation="browse.JcefBrowserService"/>
        <projectService serviceImplementation="browse.JcefBrowserDiffService"/>
<!--        <projectService serviceImplementation="com.qianliuAiUi.EditorGutterIconService"/>-->
<!--        <postStartupActivity implementation="com.common.ideStartUpActivity"/>-->
<!--        <postStartupActivity implementation="com.obiscr.chatgpt.core.StartUpActivityService"/>-->
<!--        <postStartupActivity implementation="com.qianliuAiUi.StartUpActivityService"/>-->
<!--        <preloadingActivity implementation="com.obiscr.tabnine.Initializer"/>-->
<!--        <preloadingActivity implementation="com.obiscr.tabnine.general.GettingStartedManager"/>-->
<!--        <postStartupActivity implementation="com.obiscr.tabnine.Initializer"/>-->
<!--        <statusBarWidgetProvider implementation="com.qianliuAiUi.statusBar.StatusBarProvider"/>-->
<!--        <statusBarWidgetProvider implementation="com.obiscr.tabnine.statusBar.StatusBarProvider"/>-->
<!--        &lt;!&ndash;        <statusBarWidgetProvider implementation="com.tabnine.statusBar.StatusBarPromotionProvider"/>&ndash;&gt;-->
<!--        <completion.contributor language="any" implementationClass="com.obiscr.tabnine.intellij.completions.TabNineCompletionContributor" order="first"/>-->

<!--        <applicationService serviceImplementation="com.obiscr.tabnine.lifecycle.BinaryStateService"/>-->
<!--        <applicationService serviceImplementation="com.obiscr.tabnine.capabilities.CapabilitiesService"/>-->
<!--        <applicationService serviceImplementation="com.obiscr.tabnine.lifecycle.LifeCycleHelper"/>-->
<!--        <applicationService serviceImplementation="com.obiscr.tabnine.general.BrowserUtilsService"/>-->

<!--        <actionPromoter implementation="com.obiscr.tabnine.inline.InlineActionsPromoter"/>-->
<!--        <editorActionHandler action="EditorEscape" implementationClass="com.obiscr.tabnine.inline.EscapeHandler" id="previewEscape" order="before hide-hints"/>-->
<!--        <editorFactoryDocumentListener implementation="com.obiscr.tabnine.inline.TabnineDocumentListener"/>-->
<!--        <editorFactoryDocumentListener implementation="com.obiscr.tabnine.inline.TabnineDocumentListener"/>-->
        <applicationService serviceImplementation="settings.AppSettingsState"/>
<!--        <fileType name="Tabnine project model file" implementationClass="com.obiscr.tabnine.TabnineProjectModelFileType" extensions="tabnine,.tabnine,tabnine.model,.tabnine.model,model,.model"/>-->
<!--        <fileType name="Tabnine ignore file" implementationClass="com.obiscr.tabnine.TabnineIgnoreFileType" extensions="tabnineignore"/>-->
    </extensions>

    <actions>
        <action class="quickAsk.ShortCutAction" id="quickAskShortCutAction" text="qianliuAiUiQuickAsk" >
            <keyboard-shortcut first-keystroke="alt pressed I" keymap="$default" replace-all="true"/>
        </action>
<!--        <action class="com.obiscr.tabnine.CompltionActions" id="CompeltionAction" text="manual Completion">-->
<!--            <keyboard-shortcut first-keystroke="alt pressed A" keymap="$default"/>-->
<!--        </action>-->
<!--        <action class="com.qianliuAiUi.ideActions.ui.AiReviewShortCutAction" id="qianliuAiUiShortCutAction" text="qianliuAiUi">-->
<!--            <keyboard-shortcut first-keystroke="alt pressed R" keymap="$default"/>-->
<!--        </action>-->
<!--        <action class="com.obiscr.tabnine.inline.ShowNextTabnineInlineCompletionAction" id="ShowNextTabnineInlineCompletionAction" text="Show Next Inline Completion">-->
<!--            <keyboard-shortcut first-keystroke="alt CLOSE_BRACKET" keymap="$default"/>-->
<!--        </action>-->
<!--        <action class="com.obiscr.tabnine.inline.ShowPreviousTabnineInlineCompletionAction" id="ShowPreviousTabnineInlineCompletionAction" text="Show Previous Inline Completion">-->
<!--            <keyboard-shortcut first-keystroke="alt OPEN_BRACKET" keymap="$default"/>-->
<!--        </action>-->
<!--        <action class="com.obiscr.tabnine.inline.AcceptTabnineInlineCompletionAction" id="AcceptTabnineInlineCompletionAction" text="Accept Inline Completion">-->
<!--            <keyboard-shortcut first-keystroke="TAB" keymap="$default"/>-->
<!--        </action>-->
        <group id="ChatGPT" text="Search with ChatGPT" description="Search with ChatGPT">
            <group id="GenerateCodeGroup" class="com.obiscr.chatgpt.ui.action.editor.GenerateCodeGroup"
                   icon="/icons/toolWindow.svg" popup="true" compact="true" text="千流AI：代码生成" >
                <action id="addTestCode"  class="com.obiscr.chatgpt.ui.action.editor.GenerateAddDebugCode" />
                <action id="addStrongerCode" class="com.obiscr.chatgpt.ui.action.editor.GenerateAddStrongerCode" />
                <action id="AddComment" class="com.obiscr.chatgpt.ui.action.editor.GenerateAddComment" />
                <action id="commonFunction" class="com.obiscr.chatgpt.ui.action.editor.GeneratePickCommonFunc" />
                <action id="simplifyCode" class="com.obiscr.chatgpt.ui.action.editor.GenerateSimplifyCode" />
            </group>
            <action id="TestAction" class="com.obiscr.chatgpt.ui.action.editor.TestCaseAction"
                    icon="/icons/toolWindow.svg"/>
            <action id="qianliuAiUi" icon="/icons/toolWindow.svg"
                    class="com.obiscr.chatgpt.ui.action.editor.AIReviewAction"/>
            <action id="LanguageConvertAction" icon="/icons/toolWindow.svg"
                    class="com.obiscr.chatgpt.ui.action.editor.LanguageConvertAction"/>
            <!--            <action id="OptimizeAction" class="com.obiscr.chatgpt.ui.action.editor.OptimizeAction"-->
            <!--                    icon="/icons/toolWindow.svg" />-->

            <group id="QuickAskGroup" class="com.obiscr.chatgpt.ui.action.editor.AiAskGroup"
                   icon="/icons/toolWindow.svg" popup="true" compact="true" text="千流AI：智能问答" >
                <action id="QuickAsk" class="com.obiscr.chatgpt.ui.action.editor.AiChatAction"/>
                <action id="ExplainAction" class="com.obiscr.chatgpt.ui.action.editor.ExplainAction"/>
            </group>


            <!--            <action id="WrongAction" icon="/icons/toolWindow.svg"-->
            <!--                    class="com.obiscr.chatgpt.ui.action.editor.BugAction"/>-->
            <!--      <action id="CustomAction" icon="/icons/toolWindow.svg"-->
            <!--              class="com.obiscr.chatgpt.ui.action.editor.CustomAction">-->
            <!--        <keyboard-shortcut keymap="$default" first-keystroke="control shift Q"/>-->
            <!--      </action>-->
            <separator/>
            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <separator/>
        </group>
    </actions>
</idea-plugin>